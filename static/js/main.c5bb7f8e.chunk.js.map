{"version":3,"sources":["assets/images/activity-boat/kid.png","assets/images/activity-boat/healthy.png","assets/images/activity-boat/sick.png","assets/images/activity-boat/doctor.png","assets/images/activity-boat/boat-right.png","assets/images/activity-boat/boat-left.png","components/InitialForm.js","components/Header.js","components/Game/ActivityDnD.js","components/Game/ActivityImage.js","components/Game/ActivityBoat.js","components/Game/index.js","components/FinalScreen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","layout","labelCol","span","wrapperCol","InitialForm","onSubmit","className","name","onFinish","Item","label","rules","required","message","min","max","type","htmlType","Header","player","title","subTitle","avatar","style","backgroundColor","icon","UserOutlined","getItemStyle","isDragging","draggableStyle","userSelect","padding","grid","margin","color","background","getListStyle","isDraggingOver","width","ActivityDnd","handleFinish","useState","items","setItems","count","offset","Array","from","length","v","k","map","id","content","getItems","selected","setSelected","getList","height","onDragEnd","result","source","destination","console","log","droppableId","list","startIndex","endIndex","splice","removed","reorder","index","droppableSource","droppableDestination","sourceClone","destClone","move","droppable","droppable2","provided","snapshot","ref","innerRef","item","key","draggableId","draggableProps","dragHandleProps","placeholder","onClick","JSON","stringify","i","ActivityImage","src","options","img","kidImg","sickImg","healthyImg","doctorImg","ActivityBoat","firstColItems","setFirstColItems","secondColItems","setSecondColItems","Form","useForm","form","direction","setDirection","errors","setErrors","doneTrips","setDoneTrips","showError","includes","selectOpts","showFinalButton","trip","values","selectedOpts","peopleToTravel","selectedItems","opId","find","o","boatItems","filter","resetFields","characters","mode","tokenSeparators","disabled","Option","value","forEach","boatIds","firstColIds","secondColIds","description","showIcon","Trip","border","Characters","BoatImage","boatRightImg","boatLeftImg","activities","desc","Game","numGame","val","Description","FinalScreen","frameborder","allow","allowfullscreen","DownloadOutlined","App","userInfo","setUserInfo","currentGameNumber","setCurrentGameNumber","current","Step","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.c5bb7f8e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kid.cb6ffe3d.png\";","module.exports = __webpack_public_path__ + \"static/media/healthy.27d4e171.png\";","module.exports = __webpack_public_path__ + \"static/media/sick.417f8e76.png\";","module.exports = __webpack_public_path__ + \"static/media/doctor.a5b23587.png\";","module.exports = __webpack_public_path__ + \"static/media/boat-right.46089fb7.png\";","module.exports = __webpack_public_path__ + \"static/media/boat-left.3b7050e8.png\";","import React from 'react';\r\nimport { Input, Button, Form, Layout, InputNumber } from 'antd';\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst InitialForm = ({ onSubmit }) => (\r\n    <>\r\n        <h1 className=\"my-4\">Scape room Coronavirus</h1>\r\n\r\n        <Form\r\n            {...layout}\r\n            name=\"initial\"\r\n            onFinish={onSubmit}\r\n        >\r\n            <Form.Item\r\n                label=\"Nom complet\"\r\n                name=\"name\"\r\n                rules={[{ required: true, message: 'Introdueix el teu nom!' }]}\r\n            // initialValue='Marina'\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Número de jugador\"\r\n                name=\"player\"\r\n                rules={[{ required: true, message: 'Es necessari que indiquis el teu número de jugador!' }]}\r\n            // initialValue={2}\r\n            >\r\n                <InputNumber min={1} max={5} />\r\n            </Form.Item>\r\n\r\n            <Form.Item >\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Juga!\r\n                    </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    </>\r\n)\r\n\r\nexport default InitialForm;","import React from 'react';\r\nimport { Row, Col, Button, PageHeader } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\nconst Header = ({ name, player }) => (\r\n    <PageHeader\r\n        title={name}\r\n        subTitle={`(Jugador número ${player})`}\r\n        avatar={{ style: { backgroundColor: '#87d068' }, icon: <UserOutlined /> }}\r\n    />\r\n)\r\n\r\nexport default Header;","import React, { useState, useEffect } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { Button } from 'antd';\r\n\r\n// fake data generator\r\nconst getItems = (count, offset = 0) =>\r\n    Array.from({ length: count }, (v, k) => k).map(k => ({\r\n        id: `item-${k + offset}`,\r\n        content: `item ${k + offset}`\r\n    }));\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n    const result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n\r\n    return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n    // some basic styles to make the items look a bit nicer\r\n    userSelect: 'none',\r\n    padding: grid * 2,\r\n    margin: `0 0 ${grid}px 0`,\r\n    color: isDragging ? 'black' : 'white',\r\n\r\n    // change background colour if dragging\r\n    background: isDragging ? 'lightgreen' : 'grey',\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\r\n    padding: grid,\r\n    width: 250\r\n});\r\n\r\nconst ActivityDnd = ({ handleFinish }) => {\r\n\r\n    const [items, setItems] = useState([]);\r\n    const [selected, setSelected] = useState(getItems(6))\r\n\r\n    /**\r\n     * A semi-generic way to handle multiple lists. Matches\r\n     * the IDs of the droppable container to the names of the\r\n     * source arrays stored in the state.\r\n     */\r\n\r\n    const getList = id => {\r\n        if (id === \"droppable\") return items;\r\n        else if (id === \"droppable2\") return selected;\r\n    }\r\n\r\n    const onDragEnd = result => {\r\n        const { source, destination } = result;\r\n\r\n        console.log(\"destination\", destination)\r\n\r\n        // dropped outside the list\r\n        if (!destination) return;\r\n\r\n        if (source.droppableId === destination.droppableId) {\r\n            const items = reorder(\r\n                getList(source.droppableId),\r\n                source.index,\r\n                destination.index\r\n            );\r\n\r\n            if (source.droppableId === 'droppable2') setSelected(items);\r\n            else setItems(items);\r\n\r\n        } else {\r\n            const result = move(\r\n                getList(source.droppableId),\r\n                getList(destination.droppableId),\r\n                source,\r\n                destination\r\n            );\r\n\r\n            setItems(result.droppable);\r\n            setSelected(result.droppable2)\r\n        }\r\n    };\r\n\r\n    const handleClick = () => {\r\n        const response = [\"item-0\", \"item-1\", \"item-2\", \"item-3\", \"item-4\", \"item-5\"];\r\n        if (JSON.stringify(items.map(i => i.id)) === JSON.stringify(response)) handleFinish();\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"d-flex align-items-center flex-column\">\r\n            <div className=\"d-flex align-items-center\" style={{ height: 400 }}>\r\n                <DragDropContext onDragEnd={onDragEnd}>\r\n                    <Droppable droppableId=\"droppable\">\r\n                        {(provided, snapshot) => (\r\n                            <div\r\n                                ref={provided.innerRef}\r\n                                style={getListStyle(snapshot.isDraggingOver)}>\r\n                                {items.map((item, index) => (\r\n                                    <Draggable\r\n                                        key={item.id}\r\n                                        draggableId={item.id}\r\n                                        index={index}>\r\n                                        {(provided, snapshot) => (\r\n                                            <div\r\n                                                ref={provided.innerRef}\r\n                                                {...provided.draggableProps}\r\n                                                {...provided.dragHandleProps}\r\n                                                style={getItemStyle(\r\n                                                    snapshot.isDragging,\r\n                                                    provided.draggableProps.style\r\n                                                )}>\r\n                                                {item.content}\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                ))}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                    <Droppable droppableId=\"droppable2\">\r\n                        {(provided, snapshot) => (\r\n                            <div\r\n                                ref={provided.innerRef}\r\n                                style={getListStyle(snapshot.isDraggingOver)}>\r\n                                {selected.map((item, index) => (\r\n                                    <Draggable\r\n                                        key={item.id}\r\n                                        draggableId={item.id}\r\n                                        index={index}>\r\n                                        {(provided, snapshot) => (\r\n                                            <div\r\n                                                ref={provided.innerRef}\r\n                                                {...provided.draggableProps}\r\n                                                {...provided.dragHandleProps}\r\n                                                style={getItemStyle(\r\n                                                    snapshot.isDragging,\r\n                                                    provided.draggableProps.style\r\n                                                )}>\r\n                                                {item.content}\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                ))}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n                <Button onClick={handleClick} className=\"ml-2\">RESOLDRE</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActivityDnd;","import React from 'react';\r\nimport { Button, Input } from 'antd';\r\n\r\nconst ActivityImage = ({ handleFinish }) => {\r\n    return (\r\n        <div className=\"d-flex align-items-center justify-content-center\">\r\n            <img src=\"https://www.wikihow.com/images/thumb/4/40/Capture-21.jpg/339px-Capture-21.jpg\" className=\"mb-2\" />\r\n            <div className=\"ml-2\">\r\n                <Input placeholder=\"Reposta\" />\r\n                <Button onClick={handleFinish} className=\"mt-2\">RESOLDRE PROVA 3</Button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ActivityImage;","import React, { useState } from 'react';\r\nimport { Button, Select, Form, Alert } from 'antd';\r\n\r\nimport kidImg from '../../assets/images/activity-boat/kid.png';\r\nimport healthyImg from '../../assets/images/activity-boat/healthy.png';\r\nimport sickImg from '../../assets/images/activity-boat/sick.png';\r\nimport doctorImg from '../../assets/images/activity-boat/doctor.png';\r\nimport boatRightImg from '../../assets/images/activity-boat/boat-right.png';\r\nimport boatLeftImg from '../../assets/images/activity-boat/boat-left.png';\r\n\r\nconst RIGHT = 'RIGHT';\r\nconst LEFT = 'LEFT';\r\nconst options = [{\r\n    id: 'kid',\r\n    name: 'Nen',\r\n    img: kidImg\r\n}, {\r\n    id: 'sick',\r\n    name: 'Infectat',\r\n    img: sickImg,\r\n}, {\r\n    id: 'healthy',\r\n    name: 'Sa',\r\n    img: healthyImg\r\n},\r\n{\r\n    id: 'doctor',\r\n    name: 'Doctora',\r\n    img: doctorImg\r\n}\r\n];\r\n\r\nconst ActivityBoat = ({ handleFinish }) => {\r\n    const [firstColItems, setFirstColItems] = useState(options);\r\n    const [secondColItems, setSecondColItems] = useState([]);\r\n    const [form] = Form.useForm();\r\n    const [direction, setDirection] = useState(RIGHT)\r\n    const [errors, setErrors] = useState(null)\r\n\r\n    const [doneTrips, setDoneTrips] = useState([]);\r\n\r\n    const resetGame = () => {\r\n        setFirstColItems(options);\r\n        setSecondColItems([]);\r\n        setDoneTrips([]);\r\n        setDirection(RIGHT);\r\n        setErrors(null);\r\n        form.resetFields();\r\n    }\r\n\r\n\r\n    const onSubmitTrip = values => {\r\n        const selectedOpts = values.peopleToTravel;\r\n        const selectedItems = selectedOpts && values.peopleToTravel.map(opId => options.find(o => o.id == opId));\r\n\r\n        setDoneTrips([\r\n            ...doneTrips,\r\n            {\r\n                firstColItems: [...firstColItems],\r\n                secondColItems: [...secondColItems],\r\n                boatItems: selectedItems,\r\n                direction: direction\r\n            }\r\n        ])\r\n\r\n        //reset trip to modify\r\n        if (selectedOpts) {\r\n            if (direction == RIGHT) {\r\n                setFirstColItems(firstColItems.filter(i => !selectedOpts.includes(i.id)))\r\n                setSecondColItems([...secondColItems, ...selectedItems])\r\n            } else {\r\n                setSecondColItems(secondColItems.filter(i => !selectedOpts.includes(i.id)))\r\n                setFirstColItems([...firstColItems, ...selectedItems])\r\n            }\r\n        }\r\n        if (direction === RIGHT) setDirection(LEFT)\r\n        else setDirection(RIGHT)\r\n\r\n        form.resetFields();\r\n    }\r\n\r\n    const handleFinalValidation = () => {\r\n        const errors = [false, false, false];\r\n        //Errors:\r\n        //0 --> Que no hi hagi cap viatge amb més de 3 persones i que com a mínim hi hagi el doctor\r\n        //1 --> Que l'infectat no estigui mai amb algun altre personatge si no hi ha el doctor\r\n        //2 --> Que no hi hagi més viatges que la solució òptima\r\n\r\n\r\n        doneTrips.forEach(trip => {\r\n            let boatIds = trip.boatItems && trip.boatItems.map(i => i.id);\r\n            let firstColIds = trip.firstColItems && trip.firstColItems.map(i => i.id);\r\n            let secondColIds = trip.secondColItems && trip.secondColItems.map(i => i.id);\r\n            if (boatIds && (boatIds.length > 2 || !boatIds.includes('doctor'))) errors[0] = true;\r\n            if (firstColIds && firstColIds.includes('sick') && !firstColIds.includes('doctor') && firstColIds.length > 1) errors[1] = true;\r\n            if (secondColIds && secondColIds.includes('sick') && !secondColIds.includes('doctor') && secondColIds.length > 1) errors[1] = true;\r\n        })\r\n\r\n        if (doneTrips.length > 7) errors[2] = true;\r\n\r\n        if (!errors.includes(true)) handleFinish();\r\n        else setErrors(errors)\r\n    }\r\n\r\n    const showError = errors && errors.includes(true);\r\n    const selectOpts = direction === RIGHT ? firstColItems : secondColItems;\r\n    const showFinalButton = secondColItems.length === 4 && !showError;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mb-3\">\r\n                {doneTrips && doneTrips.map((trip, key) =>\r\n                    <Trip {...trip} key={key} />\r\n                )}\r\n\r\n                <Form\r\n                    name=\"boatForm\"\r\n                    form={form}\r\n                    onFinish={onSubmitTrip}\r\n                >\r\n                    <div className=\"d-flex align-items-center justify-content-center\">\r\n                        <Characters characters={firstColItems} />\r\n\r\n\r\n\r\n                        <div className=\"d-flex flex-column align-items-center\">\r\n                            <BoatImage direction={direction} />\r\n                            <Form.Item\r\n                                name=\"peopleToTravel\"\r\n                            >\r\n                                <Select mode=\"tags\" style={{ width: 120 }} tokenSeparators={[',']} disabled={showError}>\r\n                                    {selectOpts.map(o => <Select.Option value={o.id} key={o.id}>{o.name}</Select.Option>)}\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </div>\r\n                        <Characters characters={secondColItems} />\r\n\r\n                        {!showError &&\r\n                            <Button htmlType=\"submit\" className=\"ml-2\">Següent viatge</Button>\r\n                        }\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n\r\n            {showFinalButton &&\r\n                <Button type=\"primary\" onClick={handleFinalValidation} className=\"ml-2\">\r\n                    Comprova resposta\r\n                </Button>\r\n            }\r\n            {showError &&\r\n                <div className=\"p-5\">\r\n                    <Alert\r\n                        message=\"Resposta incorrecta!\"\r\n                        description={\r\n                            <div>\r\n                                <ul>\r\n                                    {errors[0] && <li>Només pot viatjar el doctor amb, com a molt, un altre personatge!</li>}\r\n                                    {errors[1] && <li>L'infectat no pot estar mai amb un altre personatge si no hi ha el doctor!</li>}\r\n                                    {errors[2] && <li>La solució òptima té menys viatges!</li>}\r\n                                </ul>\r\n                                <Button className=\"mt-2\" onClick={resetGame}>Torna-ho a provar!</Button>\r\n                            </div>\r\n                        }\r\n                        type=\"error\"\r\n                        showIcon\r\n                    />\r\n                </div>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActivityBoat;\r\n\r\n\r\nconst Trip = ({ firstColItems, secondColItems, boatItems, direction }) => {\r\n    return (\r\n        <div className=\"d-flex align-items-center justify-content-center my-2\">\r\n            <Characters characters={firstColItems} />\r\n            <div className=\"ml-2\">\r\n                <BoatImage direction={direction} style={{ border: 'solid 5px red' }} />\r\n                {boatItems &&\r\n                    boatItems.map(item => (\r\n                        <img\r\n                            key={item.id}\r\n                            src={item.img}\r\n                            style={{ height: 100, border: 'solid 5px red' }}\r\n                            className=\"m-2\"\r\n                        />\r\n                    )\r\n                    )\r\n                }\r\n            </div>\r\n            <Characters characters={secondColItems} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Characters = ({ characters }) => {\r\n    return (\r\n        <div style={{ width: 300, height: 120, border: 'solid 2px' }} className=\"mx-3\">\r\n            {characters.map(i => <img key={i.id} src={i.img} style={{ height: 100 }} className=\"m-2\" />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst BoatImage = ({ direction, style }) => (\r\n    <img\r\n        src={direction === RIGHT ? boatRightImg : boatLeftImg}\r\n        style={style ? { ...style, height: 100 } : { height: 100 }}\r\n        className=\"m-2\"\r\n    />\r\n)","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport ActivityDnd from './ActivityDnD';\r\nimport ActivityImage from './ActivityImage';\r\nimport ActivityBoat from './ActivityBoat';\r\n\r\nconst activities = [\r\n    {\r\n        desc: \"L'objectiu és aconseguir que tots els personatge creuin el riu, però el doctor només pot transportar un pacient per viatge. A més, el malalt no pot quedar-se sol amb cap dels dos altres personatges sense el doctor present. Per tant, hauran de trobar la combinació correcta per aconseguir atravessar el riu tots.\",\r\n\r\n    },\r\n    {\r\n        desc: \"drag and drop description\",\r\n\r\n    },\r\n    {\r\n        desc: \"descripcio prov imatge\",\r\n    }\r\n]\r\n\r\nconst Game = ({ numGame, handleFinish }) => {\r\n    switch (numGame) {\r\n        case 1:\r\n            return (\r\n                <>\r\n                    <Description val={activities[0].desc} />\r\n                    < ActivityBoat handleFinish={handleFinish} />\r\n                </>\r\n            )\r\n            break;\r\n        case 2:\r\n            return (\r\n                <>\r\n                    <Description val={activities[1].desc} />\r\n                    < ActivityDnd handleFinish={handleFinish} />\r\n                </>\r\n            )\r\n            break;\r\n        case 3:\r\n            return (\r\n                <>\r\n                    <Description val={activities[2].desc} />\r\n                    < ActivityImage handleFinish={handleFinish} />\r\n                </>\r\n            )\r\n            break;\r\n    }\r\n}\r\n\r\nexport default Game;\r\n\r\nconst Description = ({ val }) => (\r\n    <div className=\"d-flex flex-column align-items-center mt-4\">\r\n        <p className=\"w-50\">{val}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport { Button, Row } from 'antd';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\n\r\nconst FinalScreen = () => (\r\n    <Row className=\"d-flex flex-column align-content-center\">\r\n        <h1>Felicitats!</h1>\r\n        <iframe\r\n            width=\"560\"\r\n            height=\"315\"\r\n            src=\"https://www.youtube.com/embed/W1Lq3rjg8R4\"\r\n            frameborder=\"0\"\r\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowfullscreen\r\n        ></iframe>\r\n        <div>\r\n            <Button type=\"primary\" icon={<DownloadOutlined />} className=\"mt-2\">\r\n                Descarrega diploma\r\n            </Button>\r\n        </div>\r\n    </Row>\r\n)\r\n\r\nexport default FinalScreen;","import React, { useState } from 'react';\nimport './App.css';\nimport './styles/bootstrap.min.css';\nimport 'antd/dist/antd.css';\n\nimport InitialForm from './components/InitialForm';\nimport { Row, Col, Steps } from 'antd';\nimport Header from './components/Header';\nimport Game from './components/Game/index';\nimport FinalScreen from './components/FinalScreen';\n\nfunction App() {\n  const [userInfo, setUserInfo] = useState(null);\n  const [currentGameNumber, setCurrentGameNumber] = useState(1);\n\n  const handleGameFinish = () => {\n    if (currentGameNumber < 4) setCurrentGameNumber(currentGameNumber + 1);\n  }\n\n  return (\n    <div className=\"App\">\n      {userInfo &&\n        <>\n          <Header {...userInfo} />\n          {currentGameNumber < 4 ?\n            <>\n              <Row>\n                <Col span={18} offset={3}>\n                  <Steps current={currentGameNumber - 1}>\n                    <Steps.Step title=\"Prova 1\" description=\"Descripció...\" />\n                    <Steps.Step title=\"Prova 2\" subTitle=\"subtitol\" description=\"This is a description.\" />\n                    <Steps.Step title=\"Prova 3\" description=\"This is a description.\" />\n                    <Steps.Step title=\"Completat!\" description=\"This is a description.\" />\n                    {/* <Steps.Step title=\"Final!\" description=\"This is a description.\" /> */}\n                  </Steps>\n                </Col>\n              </Row>\n              <Game numGame={currentGameNumber} handleFinish={handleGameFinish} />\n            </>\n            : <FinalScreen />\n          }\n        </>\n      }\n      <Row className='mt-3'>\n        <Col span={12} offset={6} >\n          {!userInfo &&\n            <InitialForm onSubmit={setUserInfo} />\n          }\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}